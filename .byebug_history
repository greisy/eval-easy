c
evaluator_agents
invalid_evaluator_agents
c
invalid_evaluator_agents
c
invalid_evaluator_agents[1]["row"].errors
invalid_evaluator_agents[1]["row"]
invalid_evaluator_agents[1]
invalid_evaluator_agents
exit
invalid_evaluator_agents[1]["row"].class
invalid_evaluator_agents[1]["row"]
invalid_evaluator_agents[1]["row"].errors
invalid_evaluator_agents[1]["row"]
invalid_evaluator_agents[1]
invalid_evaluator_agents[1][:row]
invalid_evaluator_agents[1].row
invalid_evaluator_agents[1]
invalid_evaluator_agents
c
evaluator_agent.valid?
evaluator_agent
n
DocumentType.find_by_code(identity_card[0]).id
n
exit
DocumentType.find_by_code(current_row["Cédula"][0]).id
DocumentType.find_by_code current_row["Cédula"][0]
DocumentType.find_by_code current_row["Cédula"][0].id
DocumentType.find_by_code current_row["Cédula"][0]
DocumentType.find_by_code current_row["Cédula"][0].class
DocumentType.find_by_code current_row["Cédula"][0]
DocumentType.find_by_code current_row["Cédula"][0].id
DocumentType.find_by_code current_row["Cédula"][0]
c
exit
evaluator_agent
c
exit
evaluator_agents
flag
n
c
n
header
n
x_sheet
n
c
n
xls
n
exit
params
params[:institution_id]
params
Roo::Spreadsheet.open(params['file'].tempfile)
params['file'].tempfile.class
params['file'].tempfile
params['file']
params['tempfile']
params[:tempfile]
params[@tempfile]
params
quit
params
c
n
exit
is_massive?
c
n
c
n
evaluator_agent_params[:massive]
evaluator_agent_params]
evaluator_agent_params
exit
evaluator_agent_params[:massive]
evaluator_agent_params.massive
evaluator_agent_params
params
c
evaluator_agent
evaluator_agent_params
n
exit
evaluator_agent_params
evaluator_agent
n
exit
evaluator_agent.errors
evaluator_agent
n
exit
evaluator_agent.errors
evaluator_agent
n
evaluator_agent
n
exit
evaluator_agent
n
exit
c
n
exit
evaluator_agent_params
evaluator_agent
n
exit
params.require(:evaluator_agent).permit(:phone_number)
params.require(:evaluator_agent).permit(:document_type_id)
params.require(:evaluator_agent)
params
params.require(:document_type_id).permit(:id)
params.require(:document_type_id).permit(id)
params.require(:document_type_id)
params.require(:document_type)
params
c
exit
c
exit
devise_parameter_sanitizer.permit(:sign_up, keys: [:role_id, :identity_card, :name,:last_name, :phone, :institution_id, :document_type_id])
}
devise_parameter_sanitizer.permit(:sign_up, keys: [:role_id, :identity_card, :name,:last_name, :phone, :institution_id, :document_type_id])
devise_parameter_sanitizer
params
devise_parameter_sanitizer
devise_parameter_sanitizer.permit(:registration) do |u|
devise_parameter_sanitizer.permit(:registration)
devise_parameter_sanitizer.permit(:sign_up, keys: [:email])
devise_parameter_sanitizer.permit(:sign_up)
devise_parameter_sanitizer(:sign_up)
devise_parameter_sanitizer(:user)
devise_parameter_sanitizer
devise_parameter_sanitizer.permit(:registration)
devise_parameter_sanitizer.permit(:sign_up, keys: [:role_id, :identity_card, :name,:last_name, :phone, :institution_id, :document_type_id])
devise_parameter_sanitizer.permit(:sign_up)
devise_parameter_sanitizer.for(:sign_up)
devise_parameter_sanitizer
exit
params
params.require(:user).permit(:name, :last_name)
params.require(:user).permit(:document_type_id)
params.require(:user).permit(:name)
params.require(:user)
params
params[:user][:document_type_id][:id]
configure_permitted_parameters
params
c
params.require(:subject)
params
c
params
params.require(:user).permit(:document_type_id)
params.require(:user)
params.require(:document_type_id)
params
c
params
n
c
params[:user]
params
params[:user][:document_type_id][:id]
params[:user][:document_type_id]
params[:user][:document_type]
params[:user]
params
c
subject.errors
subject.save
n
c
subject.errors
subject.save
subject
n
subject_params
c
subject_params
params.require(:scale).permit(:id)
params
params.require(:scale).permit(:id)
params.require(:scale).permit(id)
params.require(:scale)
params
subject_params
c
subject_params
c
subject.errors
subject.save!
subject
n
c
scale_params[:id]
scale_params
subject
n
c
params.require(:scale)
params[:institution_id]
params.require(:subject)
params.require(:scale)
params.require(:subject)
params.require(:scale)
params.require(:scale_type)
params.require(:scale)
params.require(:subject)
params
c
description.id
description
n
alphabetic.id
alphabetic
n
numeric.id
numeric
n
c
n
c
n
degree
c
degree
n
c
degree.errors
degree
n
degree
c
params.require(:degree).permit(:name ,:description, :institution_id)
params.require(:degree)
params
c
n
params
c
params
c
params
c
params
c
params
c
@institution
params
